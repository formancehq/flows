// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"openapi/internal/utils"
	"time"
)

type WorkflowInstanceHistory struct {
	Name         string     `json:"name"`
	Input        Stage      `json:"input"`
	Error        *string    `json:"error,omitempty"`
	Terminated   bool       `json:"terminated"`
	StartedAt    time.Time  `json:"startedAt"`
	TerminatedAt *time.Time `json:"terminatedAt,omitempty"`
}

func (w WorkflowInstanceHistory) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowInstanceHistory) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowInstanceHistory) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *WorkflowInstanceHistory) GetInput() Stage {
	if o == nil {
		return Stage{}
	}
	return o.Input
}

func (o *WorkflowInstanceHistory) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *WorkflowInstanceHistory) GetTerminated() bool {
	if o == nil {
		return false
	}
	return o.Terminated
}

func (o *WorkflowInstanceHistory) GetStartedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartedAt
}

func (o *WorkflowInstanceHistory) GetTerminatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.TerminatedAt
}
