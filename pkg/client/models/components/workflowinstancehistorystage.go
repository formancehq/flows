// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"openapi/internal/utils"
	"time"
)

type WorkflowInstanceHistoryStage struct {
	Name          string                              `json:"name"`
	Input         WorkflowInstanceHistoryStageInput   `json:"input"`
	Output        *WorkflowInstanceHistoryStageOutput `json:"output,omitempty"`
	Error         *string                             `json:"error,omitempty"`
	Terminated    bool                                `json:"terminated"`
	StartedAt     time.Time                           `json:"startedAt"`
	TerminatedAt  *time.Time                          `json:"terminatedAt,omitempty"`
	LastFailure   *string                             `json:"lastFailure,omitempty"`
	Attempt       int64                               `json:"attempt"`
	NextExecution *time.Time                          `json:"nextExecution,omitempty"`
}

func (w WorkflowInstanceHistoryStage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowInstanceHistoryStage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowInstanceHistoryStage) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *WorkflowInstanceHistoryStage) GetInput() WorkflowInstanceHistoryStageInput {
	if o == nil {
		return WorkflowInstanceHistoryStageInput{}
	}
	return o.Input
}

func (o *WorkflowInstanceHistoryStage) GetOutput() *WorkflowInstanceHistoryStageOutput {
	if o == nil {
		return nil
	}
	return o.Output
}

func (o *WorkflowInstanceHistoryStage) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *WorkflowInstanceHistoryStage) GetTerminated() bool {
	if o == nil {
		return false
	}
	return o.Terminated
}

func (o *WorkflowInstanceHistoryStage) GetStartedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartedAt
}

func (o *WorkflowInstanceHistoryStage) GetTerminatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.TerminatedAt
}

func (o *WorkflowInstanceHistoryStage) GetLastFailure() *string {
	if o == nil {
		return nil
	}
	return o.LastFailure
}

func (o *WorkflowInstanceHistoryStage) GetAttempt() int64 {
	if o == nil {
		return 0
	}
	return o.Attempt
}

func (o *WorkflowInstanceHistoryStage) GetNextExecution() *time.Time {
	if o == nil {
		return nil
	}
	return o.NextExecution
}
