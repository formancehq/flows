// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type V2RunWorkflowRequest struct {
	// The flow id
	WorkflowID string `pathParam:"style=simple,explode=false,name=workflowID"`
	// Wait end of the workflow before return
	Wait        *bool             `queryParam:"style=form,explode=true,name=wait"`
	RequestBody map[string]string `request:"mediaType=application/json"`
}

func (o *V2RunWorkflowRequest) GetWorkflowID() string {
	if o == nil {
		return ""
	}
	return o.WorkflowID
}

func (o *V2RunWorkflowRequest) GetWait() *bool {
	if o == nil {
		return nil
	}
	return o.Wait
}

func (o *V2RunWorkflowRequest) GetRequestBody() map[string]string {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type V2RunWorkflowResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The workflow instance
	V2RunWorkflowResponse *components.V2RunWorkflowResponse
}

func (o *V2RunWorkflowResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *V2RunWorkflowResponse) GetV2RunWorkflowResponse() *components.V2RunWorkflowResponse {
	if o == nil {
		return nil
	}
	return o.V2RunWorkflowResponse
}
